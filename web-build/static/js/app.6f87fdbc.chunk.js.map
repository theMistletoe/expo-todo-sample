{"version":3,"sources":["components/TaskList.tsx","pages/Home.tsx","components/TaskDescription.tsx","pages/Detail.tsx","App.tsx"],"names":["styles","StyleSheet","create","item","padding","fontSize","height","TaskList","props","navigation","useNavigation","FlatList","data","tasks","renderItem","index","Text","style","key","onPress","navigate","itemTitle","title","itemDescription","description","App","useState","setTasks","inputText","setInputText","useEffect","View","container","TextInput","placeholder","onChangeText","text","value","Button","newNameList","slice","push","flex","backgroundColor","alignItems","justifyContent","centeredView","marginTop","modalView","margin","borderRadius","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","openButton","textStyle","color","fontWeight","textAlign","modalText","marginBottom","TaskDescription","task","handlePress","defaultProps","Detail","route","params","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","name","component","Home"],"mappings":"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","file":"static/js/app.6f87fdbc.chunk.js","sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport React from 'react';\nimport { StyleSheet, Text, FlatList } from 'react-native';\nimport { TaskItem } from '../types/TaskItem';\n\ntype Props = {\n    tasks: TaskItem[];\n}\n\nconst TaskList = (props: Props) => {\n    const navigation = useNavigation(); // (2)\n    return (\n        <>\n            <FlatList\n                data={props.tasks}\n                renderItem={({item, index}) => <Text style={styles.item} key={index} onPress={() => {\n                    navigation.navigate(\n                        'Detail',\n                        {\n                            itemTitle: item.title,\n                            itemDescription: item.description,\n                        }\n                    )}}>{item.title}</Text>}\n            />\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n    },\n});\n\nexport default TaskList;","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TextInput, Button } from 'react-native';\nimport { TaskItem } from '../types/TaskItem';\nimport TaskList from '../components/TaskList';\n\nexport default function App() {\n\n  const [tasks, setTasks] = useState<TaskItem[]>([]);\n  const [inputText, setInputText] = useState<string>('');\n\n  useEffect(() => {\n    setTasks([\n      {title: 'Task1', description: \"description1\"},\n      {title: 'Task2', description: \"description2\"},\n      {title: 'Task3', description: \"description3\"},\n    ]);\n  }, []);\n\n  const handlePress = () => {\n    const newNameList = tasks.slice();\n    newNameList.push({title: inputText, description: \"\"});\n    setTasks(newNameList);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={{height: 40}}\n        placeholder=\"Type here to translate!\"\n        onChangeText={text => setInputText(text)}\n        value={inputText}\n      />\n      <Button\n        title=\"Press me\"\n        onPress={handlePress}\n      />\n      <TaskList tasks={tasks} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, Button, GestureResponderEvent } from 'react-native';\nimport { TaskItem } from '../types/TaskItem';\n\ntype Props = {\n    task: TaskItem;\n    handlePress: (event: GestureResponderEvent) => void;\n}\n\nconst TaskDescription = (props: Props) => {\n    return (\n        <View style={styles.container}>\n            <Text style={styles.item}>{props.task.title}</Text>\n            <Text style={styles.item}>{props.task.description}</Text>\n            <Button title=\"close\" onPress={props.handlePress}/>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n    },\n});\n\nTaskDescription.defaultProps = {\n    task: { title: \"\", description: \"\"},\n    handlePress: () => {}\n}\n\nexport default TaskDescription;","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TaskDescription from '../components/TaskDescription';\nimport { TaskItem } from '../types/TaskItem';\n\ntype Props = {\n  task: TaskItem;\n}\n\n// TODO ここのrouteの型推論はv5で聞かせられるようになってるらしい\n// https://qiita.com/shinnoki/items/e32e20b812606ce7219c\nexport default function Detail({ route }) {\n  const { itemTitle, itemDescription } = route.params;\n  const task:TaskItem = {\n    title: itemTitle,\n    description: itemDescription,\n  };\n\n  return (\n    <View style={styles.container}>\n      <TaskDescription task={task} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\n\n// (1) StackNavigatorを生成する\nconst Stack = createStackNavigator();\n\nexport default function App() {\n\n  return (\n    <NavigationContainer>\n      {/* (1) 画面遷移対象のアプリケーションコード */}\n      <Stack.Navigator initialRouteName=\"Home\">\n        {/* (2) StackNavigator用の画面を定義する */}\n        <Stack.Screen\n          name=\"Home\"\n          component={Home} />\n        <Stack.Screen\n          name=\"Detail\"\n          component={Detail} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"sourceRoot":""}